<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanshan.myblog.domain.generator.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.hanshan.myblog.domain.generator.entity.Comment">
    <id column="comm_id" jdbcType="BIGINT" property="commId" />
    <result column="comm_createdate" jdbcType="TIMESTAMP" property="commCreatedate" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="comm_praise" jdbcType="INTEGER" property="commPraise" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hanshan.myblog.domain.generator.entity.Comment">
    <result column="comm_content" jdbcType="LONGVARCHAR" property="commContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comm_id, comm_createdate, user_id, article_id, comm_praise, parent_id
  </sql>
  <sql id="Blob_Column_List">
    comm_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hanshan.myblog.domain.generator.entity.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hanshan.myblog.domain.generator.entity.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hanshan.myblog.domain.generator.entity.CommentExample">
    delete from blog_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.hanshan.myblog.domain.generator.entity.Comment">
    insert into blog_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commId != null">
        comm_id,
      </if>
      <if test="commCreatedate != null">
        comm_createdate,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="commPraise != null">
        comm_praise,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="commContent != null">
        comm_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commId != null">
        #{commId,jdbcType=BIGINT},
      </if>
      <if test="commCreatedate != null">
        #{commCreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="commPraise != null">
        #{commPraise,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="commContent != null">
        #{commContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hanshan.myblog.domain.generator.entity.CommentExample" resultType="java.lang.Long">
    select count(*) from blog_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog_comment
    <set>
      <if test="record.commId != null">
        comm_id = #{record.commId,jdbcType=BIGINT},
      </if>
      <if test="record.commCreatedate != null">
        comm_createdate = #{record.commCreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=BIGINT},
      </if>
      <if test="record.commPraise != null">
        comm_praise = #{record.commPraise,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.commContent != null">
        comm_content = #{record.commContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update blog_comment
    set comm_id = #{record.commId,jdbcType=BIGINT},
      comm_createdate = #{record.commCreatedate,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=BIGINT},
      article_id = #{record.articleId,jdbcType=BIGINT},
      comm_praise = #{record.commPraise,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      comm_content = #{record.commContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog_comment
    set comm_id = #{record.commId,jdbcType=BIGINT},
      comm_createdate = #{record.commCreatedate,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=BIGINT},
      article_id = #{record.articleId,jdbcType=BIGINT},
      comm_praise = #{record.commPraise,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanshan.myblog.domain.generator.entity.Comment">
    update blog_comment
    <set>
      <if test="commCreatedate != null">
        comm_createdate = #{commCreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="commPraise != null">
        comm_praise = #{commPraise,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="commContent != null">
        comm_content = #{commContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comm_id = #{commId,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.hanshan.myblog.domain.generator.entity.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.hanshan.myblog.domain.generator.entity.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>